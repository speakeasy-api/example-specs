openapi: 3.1.0
info:
  title: Discord HTTP API (Preview)
  description: Preview of the Discord v10 HTTP API specification. See https://discord.com/developers/docs for more details.
  termsOfService: https://discord.com/developers/docs/policies-and-agreements/developer-terms-of-service
  license:
    name: MIT
    identifier: MIT
  version: '10'
externalDocs:
  url: https://discord.com/developers/docs
  description: Discord Developer Documentation
servers:
  - url: https://discord.com/api/v10
paths:
  "/channels/{channel_id}/messages/{message_id}":
    parameters:
      - name: channel_id
        in: path
        schema:
          "$ref": "#/components/schemas/SnowflakeType"
        required: true
      - name: message_id
        in: path
        schema:
          "$ref": "#/components/schemas/SnowflakeType"
        required: true
    get:
      operationId: get_message
      responses:
        '200':
          description: 200 response for get_message
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageResponse"
        4XX:
          "$ref": "#/components/responses/ClientErrorResponse"
      security:
        - BotToken: []
    patch:
      operationId: update_message
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MessageEditRequestPartial"
        required: true
      responses:
        '200':
          description: 200 response for update_message
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageResponse"
        4XX:
          "$ref": "#/components/responses/ClientErrorResponse"
      security:
        - BotToken: []
  "/channels/{channel_id}/messages":
    parameters:
      - name: channel_id
        in: path
        schema:
          "$ref": "#/components/schemas/SnowflakeType"
        required: true
    get:
      operationId: list_messages
      parameters:
        - name: around
          in: query
          schema:
            "$ref": "#/components/schemas/SnowflakeType"
        - name: before
          in: query
          schema:
            "$ref": "#/components/schemas/SnowflakeType"
        - name: after
          in: query
          schema:
            "$ref": "#/components/schemas/SnowflakeType"
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: 200 response for list_messages
          content:
            application/json:
              schema:
                type:
                  - array
                  - 'null'
                items:
                  "$ref": "#/components/schemas/MessageResponse"
        4XX:
          "$ref": "#/components/responses/ClientErrorResponse"
      security:
        - BotToken: []
  "/channels/{channel_id}/invites":
    parameters:
      - name: channel_id
        in: path
        schema:
          "$ref": "#/components/schemas/SnowflakeType"
        required: true
    get:
      operationId: list_channel_invites
      responses:
        '200':
          description: 200 response for list_channel_invites
          content:
            application/json:
              schema:
                type:
                  - array
                  - 'null'
                items:
                  anyOf:
                    - "$ref": "#/components/schemas/FriendInviteResponse"
                    - "$ref": "#/components/schemas/GroupDMInviteResponse"
                    - "$ref": "#/components/schemas/GuildInviteResponse"
        4XX:
          "$ref": "#/components/responses/ClientErrorResponse"
      security:
        - BotToken: []
  "/channels/{channel_id}/threads":
    parameters:
      - name: channel_id
        in: path
        schema:
          "$ref": "#/components/schemas/SnowflakeType"
        required: true
    post:
      operationId: create_thread
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - "$ref": "#/components/schemas/CreateForumThreadRequest"
                - "$ref": "#/components/schemas/CreateTextThreadWithoutMessageRequest"
              x-discord-union: oneOf
        required: true
      responses:
        '201':
          description: 201 response for create_thread
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreatedThreadResponse"
        4XX:
          "$ref": "#/components/responses/ClientErrorResponse"
      security:
        - BotToken: []
  "/channels/{channel_id}":
    parameters:
      - name: channel_id
        in: path
        schema:
          "$ref": "#/components/schemas/SnowflakeType"
        required: true
    get:
      operationId: get_channel
      responses:
        '200':
          description: 200 response for get_channel
          content:
            application/json:
              schema:
                oneOf:
                  - "$ref": "#/components/schemas/GuildChannelResponse"
                  - "$ref": "#/components/schemas/PrivateChannelResponse"
                  - "$ref": "#/components/schemas/PrivateGroupChannelResponse"
                  - "$ref": "#/components/schemas/ThreadResponse"
        4XX:
          "$ref": "#/components/responses/ClientErrorResponse"
      security:
        - BotToken: []
    delete:
      operationId: delete_channel
      responses:
        '200':
          description: 200 response for delete_channel
          content:
            application/json:
              schema:
                oneOf:
                  - "$ref": "#/components/schemas/GuildChannelResponse"
                  - "$ref": "#/components/schemas/PrivateChannelResponse"
                  - "$ref": "#/components/schemas/PrivateGroupChannelResponse"
                  - "$ref": "#/components/schemas/ThreadResponse"
        4XX:
          "$ref": "#/components/responses/ClientErrorResponse"
      security:
        - BotToken: []
    patch:
      operationId: update_channel
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - "$ref": "#/components/schemas/PrivateChannelRequestPartial"
                - "$ref": "#/components/schemas/UpdateGuildChannelRequestPartial"
                - "$ref": "#/components/schemas/UpdateThreadRequestPartial"
              x-discord-union: oneOf
        required: true
      responses:
        '200':
          description: 200 response for update_channel
          content:
            application/json:
              schema:
                oneOf:
                  - "$ref": "#/components/schemas/GuildChannelResponse"
                  - "$ref": "#/components/schemas/PrivateChannelResponse"
                  - "$ref": "#/components/schemas/PrivateGroupChannelResponse"
                  - "$ref": "#/components/schemas/ThreadResponse"
        4XX:
          "$ref": "#/components/responses/ClientErrorResponse"
      security:
        - BotToken: []
components:
  schemas:
    ActionRow:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 1
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        components:
          type: array
          items:
            oneOf:
              - "$ref": "#/components/schemas/Button"
              - "$ref": "#/components/schemas/ChannelSelect"
              - "$ref": "#/components/schemas/InputText"
              - "$ref": "#/components/schemas/MentionableSelect"
              - "$ref": "#/components/schemas/RoleSelect"
              - "$ref": "#/components/schemas/StringSelect"
              - "$ref": "#/components/schemas/UserSelect"
          minItems: 1
          maxItems: 5
      required:
        - type
        - components
    AllowedMentionTypes:
      type: string
      oneOf:
        - title: USERS
          description: Controls role mentions
          const: users
        - title: ROLES
          description: Controls user mentions
          const: roles
        - title: EVERYONE
          description: Controls @everyone and @here mentions
          const: everyone
    ApplicationCommandInteractionMetadataResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        type:
          type: integer
          enum:
            - 2
          allOf:
            - "$ref": "#/components/schemas/InteractionTypes"
          format: int32
        user:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserResponse"
        authorizing_integration_owners:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/SnowflakeType"
        original_response_message_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
      required:
        - id
        - type
        - authorizing_integration_owners
    ApplicationIntegrationTypeConfigurationResponse:
      type: object
    ApplicationOAuth2InstallParamsResponse:
      type: object
      properties:
        scopes:
          type: array
          items:
            type: string
            enum:
              - applications.commands
              - bot
            allOf:
              - "$ref": "#/components/schemas/OAuth2Scopes"
          uniqueItems: true
        permissions:
          type: string
      required:
        - scopes
        - permissions
    ApplicationResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        icon:
          type:
            - string
            - 'null'
        description:
          type: string
        type:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ApplicationTypes"
        cover_image:
          type:
            - string
            - 'null'
        primary_sku_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        bot:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserResponse"
        slug:
          type:
            - string
            - 'null'
        guild_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        rpc_origins:
          type:
            - array
            - 'null'
          items:
            type:
              - string
              - 'null'
        bot_public:
          type:
            - boolean
            - 'null'
        bot_require_code_grant:
          type:
            - boolean
            - 'null'
        terms_of_service_url:
          type:
            - string
            - 'null'
          format: uri
        privacy_policy_url:
          type:
            - string
            - 'null'
          format: uri
        custom_install_url:
          type:
            - string
            - 'null'
          format: uri
        install_params:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ApplicationOAuth2InstallParamsResponse"
        integration_types_config:
          type:
            - object
            - 'null'
          additionalProperties:
            "$ref": "#/components/schemas/ApplicationIntegrationTypeConfigurationResponse"
        verify_key:
          type: string
        flags:
          type: integer
          format: int32
        max_participants:
          type:
            - integer
            - 'null'
          format: int32
        tags:
          type:
            - array
            - 'null'
          items:
            type: string
          uniqueItems: true
      required:
        - id
        - name
        - description
        - verify_key
        - flags
    ApplicationTypes:
      type: integer
      oneOf:
        - title: GUILD_ROLE_SUBSCRIPTIONS
          const: 4
      format: int32
    BaseCreateMessageCreateRequest:
      type: object
      properties:
        content:
          type:
            - string
            - 'null'
          maxLength: 4000
        embeds:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/RichEmbed"
          maxItems: 10
        allowed_mentions:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageAllowedMentionsRequest"
        sticker_ids:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/SnowflakeType"
          maxItems: 3
        components:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/ActionRow"
          maxItems: 5
        flags:
          type:
            - integer
            - 'null'
        attachments:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/MessageAttachmentRequest"
          maxItems: 10
    BasicApplicationResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        icon:
          type:
            - string
            - 'null'
        description:
          type: string
        type:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ApplicationTypes"
        cover_image:
          type:
            - string
            - 'null'
        primary_sku_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        bot:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserResponse"
      required:
        - id
        - name
        - description
    BasicMessageResponse:
      type: object
      properties:
        type:
          "$ref": "#/components/schemas/MessageType"
        content:
          type: string
        mentions:
          type: array
          items:
            "$ref": "#/components/schemas/UserResponse"
        mention_roles:
          type: array
          items:
            "$ref": "#/components/schemas/SnowflakeType"
          uniqueItems: true
        attachments:
          type: array
          items:
            "$ref": "#/components/schemas/MessageAttachmentResponse"
        embeds:
          type: array
          items:
            "$ref": "#/components/schemas/MessageEmbedResponse"
        timestamp:
          type: string
          format: date-time
        edited_timestamp:
          type:
            - string
            - 'null'
          format: date-time
        flags:
          type: integer
          format: int32
        components:
          type: array
          items:
            oneOf:
              - "$ref": "#/components/schemas/MessageComponentActionRowResponse"
              - "$ref": "#/components/schemas/MessageComponentButtonResponse"
              - "$ref": "#/components/schemas/MessageComponentChannelSelectResponse"
              - "$ref": "#/components/schemas/MessageComponentInputTextResponse"
              - "$ref": "#/components/schemas/MessageComponentMentionableSelectResponse"
              - "$ref": "#/components/schemas/MessageComponentRoleSelectResponse"
              - "$ref": "#/components/schemas/MessageComponentStringSelectResponse"
              - "$ref": "#/components/schemas/MessageComponentUserSelectResponse"
        resolved:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ResolvedObjectsResponse"
        stickers:
          type:
            - array
            - 'null'
          items:
            oneOf:
              - "$ref": "#/components/schemas/GuildStickerResponse"
              - "$ref": "#/components/schemas/StandardStickerResponse"
        sticker_items:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/MessageStickerItemResponse"
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        channel_id:
          "$ref": "#/components/schemas/SnowflakeType"
        author:
          "$ref": "#/components/schemas/UserResponse"
        pinned:
          type: boolean
        mention_everyone:
          type: boolean
        tts:
          type: boolean
        call:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageCallResponse"
        activity:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageActivityResponse"
        application:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/BasicApplicationResponse"
        application_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        interaction:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageInteractionResponse"
        nonce:
          oneOf:
            - type: integer
              minimum: !!int -9223372036854776000
              maximum: 9223372036854776000
              format: int64
            - type: string
              maxLength: 25
              format: nonce
            - type: 'null'
        webhook_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        message_reference:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageReferenceResponse"
        thread:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ThreadResponse"
        mention_channels:
          type:
            - array
            - 'null'
          items:
            oneOf:
              - type: 'null'
              - "$ref": "#/components/schemas/MessageMentionChannelResponse"
        role_subscription_data:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageRoleSubscriptionDataResponse"
        purchase_notification:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/PurchaseNotificationResponse"
        position:
          type:
            - integer
            - 'null'
          format: int32
        interaction_metadata:
          oneOf:
            - "$ref": "#/components/schemas/ApplicationCommandInteractionMetadataResponse"
            - "$ref": "#/components/schemas/MessageComponentInteractionMetadataResponse"
            - "$ref": "#/components/schemas/ModalSubmitInteractionMetadataResponse"
            - type: 'null'
      required:
        - type
        - content
        - mentions
        - mention_roles
        - attachments
        - embeds
        - timestamp
        - flags
        - components
        - id
        - channel_id
        - author
        - pinned
        - mention_everyone
        - tts
    Button:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 2
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        custom_id:
          type:
            - string
            - 'null'
          maxLength: 100
        style:
          "$ref": "#/components/schemas/ButtonStyleTypes"
        label:
          type:
            - string
            - 'null'
          maxLength: 80
        disabled:
          type:
            - boolean
            - 'null'
        emoji:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/Emoji"
        url:
          type:
            - string
            - 'null'
          maxLength: 512
          format: uri
        sku_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
      required:
        - type
        - style
    ButtonStyleTypes:
      type: integer
      oneOf:
        - title: PRIMARY
          const: 1
        - title: SECONDARY
          const: 2
        - title: SUCCESS
          const: 3
        - title: DANGER
          const: 4
        - title: LINK
          const: 5
        - title: PREMIUM
          const: 6
      format: int32
    ByNWeekdayResponse:
      type: object
      properties:
        "n":
          type: integer
          format: int32
        day:
          "$ref": "#/components/schemas/RecurrenceRuleWeekdays"
      required:
        - "n"
        - day
    ChannelPermissionOverwriteRequest:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        type:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ChannelPermissionOverwrites"
        allow:
          type:
            - integer
            - 'null'
        deny:
          type:
            - integer
            - 'null'
      required:
        - id
    ChannelPermissionOverwriteResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        type:
          "$ref": "#/components/schemas/ChannelPermissionOverwrites"
        allow:
          type: string
        deny:
          type: string
      required:
        - id
        - type
        - allow
        - deny
    ChannelPermissionOverwrites:
      type: integer
      oneOf:
        - title: ROLE
          const: 0
        - title: MEMBER
          const: 1
      format: int32
    ChannelSelect:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 8
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        custom_id:
          type: string
          maxLength: 100
        placeholder:
          type:
            - string
            - 'null'
          maxLength: 150
        min_values:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 25
        max_values:
          type:
            - integer
            - 'null'
          minimum: 1
          maximum: 25
        disabled:
          type:
            - boolean
            - 'null'
        default_values:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/ChannelSelectDefaultValue"
          maxItems: 25
        channel_types:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/ChannelTypes"
          uniqueItems: true
      required:
        - type
        - custom_id
    ChannelSelectDefaultValue:
      type: object
      properties:
        type:
          type: string
          enum:
            - channel
          allOf:
            - "$ref": "#/components/schemas/SnowflakeSelectDefaultValueTypes"
        id:
          "$ref": "#/components/schemas/SnowflakeType"
      required:
        - type
        - id
    ChannelTypes:
      type: integer
      oneOf:
        - title: DM
          description: A direct message between users
          const: 1
        - title: GROUP_DM
          description: A direct message between multiple users
          const: 3
        - title: GUILD_TEXT
          description: A text channel within a server
          const: 0
        - title: GUILD_VOICE
          description: A voice channel within a server
          const: 2
        - title: GUILD_CATEGORY
          description: An organizational category that contains up to 50 channels
          const: 4
        - title: GUILD_ANNOUNCEMENT
          description: A channel that users can follow and crosspost into their own server (formerly news channels)
          const: 5
        - title: ANNOUNCEMENT_THREAD
          description: A temporary sub-channel within a GUILD_ANNOUNCEMENT channel
          const: 10
        - title: PUBLIC_THREAD
          description: A temporary sub-channel within a GUILD_TEXT or GUILD_THREADS_ONLY channel type set
          const: 11
        - title: PRIVATE_THREAD
          description: A temporary sub-channel within a GUILD_TEXT channel that is only viewable by those invited and those with the MANAGE_THREADS permission
          const: 12
        - title: GUILD_STAGE_VOICE
          description: A voice channel for hosting events with an audience
          const: 13
        - title: GUILD_DIRECTORY
          description: The channel in a hub containing the listed servers
          const: 14
        - title: GUILD_FORUM
          description: Channel that can only contain threads
          const: 15
        - title: GUILD_MEDIA
          description: Channel that can only contain media threads
          const: 16
      format: int32
    CreateForumThreadRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        auto_archive_duration:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ThreadAutoArchiveDuration"
        rate_limit_per_user:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 21600
        applied_tags:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/SnowflakeType"
          maxItems: 5
        message:
          "$ref": "#/components/schemas/BaseCreateMessageCreateRequest"
      required:
        - name
        - message
    CreateTextThreadWithoutMessageRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        auto_archive_duration:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ThreadAutoArchiveDuration"
        rate_limit_per_user:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 21600
        type:
          oneOf:
            - type: 'null'
            - type: integer
              enum:
                - 10
                - 11
                - 12
              allOf:
                - "$ref": "#/components/schemas/ChannelTypes"
              format: int32
        invitable:
          type:
            - boolean
            - 'null'
      required:
        - name
    CreatedThreadResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        type:
          type: integer
          enum:
            - 10
            - 11
            - 12
          allOf:
            - "$ref": "#/components/schemas/ChannelTypes"
          format: int32
        last_message_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        flags:
          type: integer
          format: int32
        last_pin_timestamp:
          type:
            - string
            - 'null'
          format: date-time
        guild_id:
          "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        parent_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        rate_limit_per_user:
          type:
            - integer
            - 'null'
          format: int32
        bitrate:
          type:
            - integer
            - 'null'
          format: int32
        user_limit:
          type:
            - integer
            - 'null'
          format: int32
        rtc_region:
          type:
            - string
            - 'null'
        video_quality_mode:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/VideoQualityModes"
        permissions:
          type:
            - string
            - 'null'
        owner_id:
          "$ref": "#/components/schemas/SnowflakeType"
        thread_metadata:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ThreadMetadataResponse"
        message_count:
          type: integer
          format: int32
        member_count:
          type: integer
          format: int32
        total_message_sent:
          type: integer
          format: int32
        applied_tags:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/SnowflakeType"
        member:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ThreadMemberResponse"
      required:
        - id
        - type
        - flags
        - guild_id
        - name
        - owner_id
        - message_count
        - member_count
        - total_message_sent
    DefaultReactionEmojiResponse:
      type: object
      properties:
        emoji_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        emoji_name:
          type:
            - string
            - 'null'
    Emoji:
      type: object
      properties:
        id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
          maxLength: 32
        animated:
          type:
            - boolean
            - 'null'
      required:
        - name
    ForumLayout:
      type: integer
      oneOf:
        - title: DEFAULT
          description: No default has been set for forum channel
          const: 0
        - title: LIST
          description: Display posts as a list
          const: 1
        - title: GRID
          description: Display posts as a collection of tiles
          const: 2
      format: int32
    ForumTagResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        moderated:
          type: boolean
        emoji_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        emoji_name:
          type:
            - string
            - 'null'
      required:
        - id
        - name
        - moderated
    FriendInviteResponse:
      type: object
      properties:
        type:
          oneOf:
            - type: 'null'
            - type: integer
              enum:
                - 2
              allOf:
                - "$ref": "#/components/schemas/InviteTypes"
              format: int32
        code:
          type: string
        inviter:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserResponse"
        max_age:
          type:
            - integer
            - 'null'
          format: int32
        created_at:
          type:
            - string
            - 'null'
          format: date-time
        expires_at:
          type:
            - string
            - 'null'
          format: date-time
        friends_count:
          type:
            - integer
            - 'null'
          format: int32
        channel:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/InviteChannelResponse"
        is_contact:
          type:
            - boolean
            - 'null'
        uses:
          type:
            - integer
            - 'null'
          format: int32
        max_uses:
          type:
            - integer
            - 'null'
          format: int32
        flags:
          type:
            - integer
            - 'null'
          format: int32
      required:
        - code
    GroupDMInviteResponse:
      type: object
      properties:
        type:
          oneOf:
            - type: 'null'
            - type: integer
              enum:
                - 1
              allOf:
                - "$ref": "#/components/schemas/InviteTypes"
              format: int32
        code:
          type: string
        inviter:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserResponse"
        max_age:
          type:
            - integer
            - 'null'
          format: int32
        created_at:
          type:
            - string
            - 'null'
          format: date-time
        expires_at:
          type:
            - string
            - 'null'
          format: date-time
        channel:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/InviteChannelResponse"
        approximate_member_count:
          type:
            - integer
            - 'null'
          format: int32
      required:
        - code
    GuildChannelResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        type:
          type: integer
          enum:
            - 0
            - 2
            - 4
            - 5
            - 13
            - 14
            - 15
            - 16
          allOf:
            - "$ref": "#/components/schemas/ChannelTypes"
          format: int32
        last_message_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        flags:
          type: integer
          format: int32
        last_pin_timestamp:
          type:
            - string
            - 'null'
          format: date-time
        guild_id:
          "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        parent_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        rate_limit_per_user:
          type:
            - integer
            - 'null'
          format: int32
        bitrate:
          type:
            - integer
            - 'null'
          format: int32
        user_limit:
          type:
            - integer
            - 'null'
          format: int32
        rtc_region:
          type:
            - string
            - 'null'
        video_quality_mode:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/VideoQualityModes"
        permissions:
          type:
            - string
            - 'null'
        topic:
          type:
            - string
            - 'null'
        default_auto_archive_duration:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ThreadAutoArchiveDuration"
        default_thread_rate_limit_per_user:
          type:
            - integer
            - 'null'
          format: int32
        position:
          type: integer
          format: int32
        permission_overwrites:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/ChannelPermissionOverwriteResponse"
        nsfw:
          type:
            - boolean
            - 'null'
        available_tags:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/ForumTagResponse"
        default_reaction_emoji:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/DefaultReactionEmojiResponse"
        default_sort_order:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ThreadSortOrder"
        default_forum_layout:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ForumLayout"
      required:
        - id
        - type
        - flags
        - guild_id
        - name
        - position
    GuildFeatures:
      type: string
      oneOf:
        - title: ANIMATED_BANNER
          description: guild has access to set an animated guild banner image
          const: ANIMATED_BANNER
        - title: ANIMATED_ICON
          description: guild has access to set an animated guild icon
          const: ANIMATED_ICON
        - title: APPLICATION_COMMAND_PERMISSIONS_V2
          description: guild is using the old permissions configuration behavior
          const: APPLICATION_COMMAND_PERMISSIONS_V2
        - title: AUTO_MODERATION
          description: guild has set up auto moderation rules
          const: AUTO_MODERATION
        - title: BANNER
          description: guild has access to set a guild banner image
          const: BANNER
        - title: COMMUNITY
          description: guild can enable welcome screen, Membership Screening, stage channels and discovery, and             receives community updates
          const: COMMUNITY
        - title: CREATOR_MONETIZABLE_PROVISIONAL
          description: guild has enabled monetization
          const: CREATOR_MONETIZABLE_PROVISIONAL
        - title: CREATOR_STORE_PAGE
          description: guild has enabled the role subscription promo page
          const: CREATOR_STORE_PAGE
        - title: DEVELOPER_SUPPORT_SERVER
          description: guild has been set as a support server on the App Directory
          const: DEVELOPER_SUPPORT_SERVER
        - title: DISCOVERABLE
          description: guild is able to be discovered in the directory
          const: DISCOVERABLE
        - title: FEATURABLE
          description: guild is able to be featured in the directory
          const: FEATURABLE
        - title: INVITES_DISABLED
          description: guild has paused invites, preventing new users from joining
          const: INVITES_DISABLED
        - title: INVITE_SPLASH
          description: guild has access to set an invite splash background
          const: INVITE_SPLASH
        - title: MEMBER_VERIFICATION_GATE_ENABLED
          description: guild has enabled Membership Screening
          const: MEMBER_VERIFICATION_GATE_ENABLED
        - title: MORE_STICKERS
          description: guild has increased custom sticker slots
          const: MORE_STICKERS
        - title: NEWS
          description: guild has access to create announcement channels
          const: NEWS
        - title: PARTNERED
          description: guild is partnered
          const: PARTNERED
        - title: PREVIEW_ENABLED
          description: guild can be previewed before joining via Membership Screening or the directory
          const: PREVIEW_ENABLED
        - title: RAID_ALERTS_DISABLED
          description: guild has disabled activity alerts in the configured safety alerts channel
          const: RAID_ALERTS_DISABLED
        - title: ROLE_ICONS
          description: guild is able to set role icons
          const: ROLE_ICONS
        - title: ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE
          description: guild has role subscriptions that can be purchased
          const: ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE
        - title: ROLE_SUBSCRIPTIONS_ENABLED
          description: guild has enabled role subscriptions
          const: ROLE_SUBSCRIPTIONS_ENABLED
        - title: TICKETED_EVENTS_ENABLED
          description: guild has enabled ticketed events
          const: TICKETED_EVENTS_ENABLED
        - title: VANITY_URL
          description: guild has access to set a vanity URL
          const: VANITY_URL
        - title: VERIFIED
          description: guild is verified
          const: VERIFIED
        - title: VIP_REGIONS
          description: guild has access to set 384kbps bitrate in voice (previously VIP voice servers)
          const: VIP_REGIONS
        - title: WELCOME_SCREEN_ENABLED
          description: guild has enabled the welcome screen
          const: WELCOME_SCREEN_ENABLED
    GuildInviteResponse:
      type: object
      properties:
        type:
          oneOf:
            - type: 'null'
            - type: integer
              enum:
                - 0
              allOf:
                - "$ref": "#/components/schemas/InviteTypes"
              format: int32
        code:
          type: string
        inviter:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserResponse"
        max_age:
          type:
            - integer
            - 'null'
          format: int32
        created_at:
          type:
            - string
            - 'null'
          format: date-time
        expires_at:
          type:
            - string
            - 'null'
          format: date-time
        is_contact:
          type:
            - boolean
            - 'null'
        flags:
          type:
            - integer
            - 'null'
          format: int32
        guild:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/InviteGuildResponse"
        guild_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        channel:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/InviteChannelResponse"
        stage_instance:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/InviteStageInstanceResponse"
        target_type:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/InviteTargetTypes"
        target_user:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserResponse"
        target_application:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/InviteApplicationResponse"
        guild_scheduled_event:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ScheduledEventResponse"
        uses:
          type:
            - integer
            - 'null'
          format: int32
        max_uses:
          type:
            - integer
            - 'null'
          format: int32
        temporary:
          type:
            - boolean
            - 'null'
        approximate_member_count:
          type:
            - integer
            - 'null'
          format: int32
        approximate_presence_count:
          type:
            - integer
            - 'null'
          format: int32
      required:
        - code
    GuildMemberResponse:
      type: object
      properties:
        avatar:
          type:
            - string
            - 'null'
        avatar_decoration_data:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserAvatarDecorationResponse"
        banner:
          type:
            - string
            - 'null'
        communication_disabled_until:
          type:
            - string
            - 'null'
          format: date-time
        flags:
          type: integer
          format: int32
        joined_at:
          type: string
          format: date-time
        nick:
          type:
            - string
            - 'null'
        pending:
          type: boolean
        premium_since:
          type:
            - string
            - 'null'
          format: date-time
        roles:
          type: array
          items:
            "$ref": "#/components/schemas/SnowflakeType"
          uniqueItems: true
        user:
          "$ref": "#/components/schemas/UserResponse"
        mute:
          type: boolean
        deaf:
          type: boolean
      required:
        - flags
        - joined_at
        - pending
        - roles
        - user
        - mute
        - deaf
    GuildNSFWContentLevel:
      type: integer
      oneOf:
        - title: DEFAULT
          const: 0
        - title: EXPLICIT
          const: 1
        - title: SAFE
          const: 2
        - title: AGE_RESTRICTED
          const: 3
      format: int32
    GuildProductPurchaseResponse:
      type: object
      properties:
        listing_id:
          "$ref": "#/components/schemas/SnowflakeType"
        product_name:
          type: string
      required:
        - listing_id
        - product_name
    GuildRoleResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        description:
          type:
            - string
            - 'null'
        permissions:
          type: string
        position:
          type: integer
          format: int32
        color:
          type: integer
          format: int32
        hoist:
          type: boolean
        managed:
          type: boolean
        mentionable:
          type: boolean
        icon:
          type:
            - string
            - 'null'
        unicode_emoji:
          type:
            - string
            - 'null'
        tags:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/GuildRoleTagsResponse"
      required:
        - id
        - name
        - permissions
        - position
        - color
        - hoist
        - managed
        - mentionable
    GuildRoleTagsResponse:
      type: object
      properties:
        premium_subscriber:
          type: 'null'
        bot_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        integration_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        subscription_listing_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        available_for_purchase:
          type: 'null'
        guild_connections:
          type: 'null'
    GuildScheduledEventEntityTypes:
      type: integer
      oneOf:
        - title: NONE
          const: 0
        - title: STAGE_INSTANCE
          const: 1
        - title: VOICE
          const: 2
        - title: EXTERNAL
          const: 3
      format: int32
    GuildScheduledEventPrivacyLevels:
      type: integer
      oneOf:
        - title: GUILD_ONLY
          description: the scheduled event is only accessible to guild members
          const: 2
      format: int32
    GuildScheduledEventStatuses:
      type: integer
      oneOf:
        - title: SCHEDULED
          const: 1
        - title: ACTIVE
          const: 2
        - title: COMPLETED
          const: 3
        - title: CANCELED
          const: 4
      format: int32
    GuildScheduledEventUserResponses:
      type: integer
      oneOf:
        - title: UNINTERESTED
          const: 0
        - title: INTERESTED
          const: 1
      format: int32
    GuildStickerResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        tags:
          type: string
        type:
          type: integer
          enum:
            - 2
          allOf:
            - "$ref": "#/components/schemas/StickerTypes"
          format: int32
        format_type:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/StickerFormatTypes"
        description:
          type:
            - string
            - 'null'
        available:
          type: boolean
        guild_id:
          "$ref": "#/components/schemas/SnowflakeType"
        user:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserResponse"
      required:
        - id
        - name
        - tags
        - type
        - available
        - guild_id
    InputText:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 4
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        custom_id:
          type: string
          maxLength: 100
        style:
          "$ref": "#/components/schemas/TextStyleTypes"
        label:
          type: string
          maxLength: 45
        value:
          type:
            - string
            - 'null'
          maxLength: 4000
        placeholder:
          type:
            - string
            - 'null'
          maxLength: 100
        required:
          type:
            - boolean
            - 'null'
        min_length:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 4000
        max_length:
          type:
            - integer
            - 'null'
          minimum: 1
          maximum: 4000
      required:
        - type
        - custom_id
        - style
        - label
    Int53Type:
      type: integer
      minimum: -9007199254740991
      maximum: 9007199254740991
      format: int64
    InteractionTypes:
      type: integer
      oneOf:
        - title: PING
          description: Sent by Discord to validate your application's interaction handler
          const: 1
        - title: APPLICATION_COMMAND
          description: Sent when a user uses an application command
          const: 2
        - title: MESSAGE_COMPONENT
          description: Sent when a user interacts with a message component previously sent by your application
          const: 3
        - title: APPLICATION_COMMAND_AUTOCOMPLETE
          description: Sent when a user is filling in an autocomplete option in a chat command
          const: 4
        - title: MODAL_SUBMIT
          description: Sent when a user submits a modal previously sent by your application
          const: 5
      format: int32
    InviteApplicationResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        icon:
          type:
            - string
            - 'null'
        description:
          type: string
        type:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ApplicationTypes"
        cover_image:
          type:
            - string
            - 'null'
        primary_sku_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        bot:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserResponse"
        slug:
          type:
            - string
            - 'null'
        guild_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        rpc_origins:
          type:
            - array
            - 'null'
          items:
            type:
              - string
              - 'null'
        bot_public:
          type:
            - boolean
            - 'null'
        bot_require_code_grant:
          type:
            - boolean
            - 'null'
        terms_of_service_url:
          type:
            - string
            - 'null'
          format: uri
        privacy_policy_url:
          type:
            - string
            - 'null'
          format: uri
        custom_install_url:
          type:
            - string
            - 'null'
          format: uri
        install_params:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ApplicationOAuth2InstallParamsResponse"
        integration_types_config:
          type:
            - object
            - 'null'
          additionalProperties:
            "$ref": "#/components/schemas/ApplicationIntegrationTypeConfigurationResponse"
        verify_key:
          type: string
        flags:
          type: integer
          format: int32
        max_participants:
          type:
            - integer
            - 'null'
          format: int32
        tags:
          type:
            - array
            - 'null'
          items:
            type: string
          uniqueItems: true
      required:
        - id
        - name
        - description
        - verify_key
        - flags
    InviteChannelRecipientResponse:
      type: object
      properties:
        username:
          type: string
      required:
        - username
    InviteChannelResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        type:
          "$ref": "#/components/schemas/ChannelTypes"
        name:
          type:
            - string
            - 'null'
        icon:
          type:
            - string
            - 'null'
        recipients:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/InviteChannelRecipientResponse"
      required:
        - id
        - type
    InviteGuildResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        splash:
          type:
            - string
            - 'null'
        banner:
          type:
            - string
            - 'null'
        description:
          type:
            - string
            - 'null'
        icon:
          type:
            - string
            - 'null'
        features:
          type: array
          items:
            "$ref": "#/components/schemas/GuildFeatures"
          uniqueItems: true
        verification_level:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/VerificationLevels"
        vanity_url_code:
          type:
            - string
            - 'null'
        nsfw_level:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/GuildNSFWContentLevel"
        nsfw:
          type:
            - boolean
            - 'null'
        premium_subscription_count:
          type:
            - integer
            - 'null'
          format: int32
      required:
        - id
        - name
        - features
    InviteStageInstanceResponse:
      type: object
      properties:
        topic:
          type: string
        participant_count:
          type:
            - integer
            - 'null'
          format: int32
        speaker_count:
          type:
            - integer
            - 'null'
          format: int32
        members:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/GuildMemberResponse"
      required:
        - topic
    InviteTargetTypes:
      type: integer
      oneOf:
        - title: STREAM
          const: 1
        - title: EMBEDDED_APPLICATION
          const: 2
        - title: ROLE_SUBSCRIPTIONS_PURCHASE
          const: 3
      format: int32
    InviteTypes:
      type: integer
      oneOf:
        - title: GUILD
          const: 0
        - title: GROUP_DM
          const: 1
        - title: FRIEND
          const: 2
      format: int32
    MentionableSelect:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 7
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        custom_id:
          type: string
          maxLength: 100
        placeholder:
          type:
            - string
            - 'null'
          maxLength: 150
        min_values:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 25
        max_values:
          type:
            - integer
            - 'null'
          minimum: 1
          maximum: 25
        disabled:
          type:
            - boolean
            - 'null'
        default_values:
          type:
            - array
            - 'null'
          items:
            oneOf:
              - "$ref": "#/components/schemas/RoleSelectDefaultValue"
              - "$ref": "#/components/schemas/UserSelectDefaultValue"
          maxItems: 25
      required:
        - type
        - custom_id
    MessageActivityResponse:
      type: object
    MessageAllowedMentionsRequest:
      type: object
      properties:
        parse:
          type:
            - array
            - 'null'
          items:
            oneOf:
              - type: 'null'
              - "$ref": "#/components/schemas/AllowedMentionTypes"
          maxItems: 1521
          uniqueItems: true
        users:
          type:
            - array
            - 'null'
          items:
            oneOf:
              - type: 'null'
              - "$ref": "#/components/schemas/SnowflakeType"
          maxItems: 100
          uniqueItems: true
        roles:
          type:
            - array
            - 'null'
          items:
            oneOf:
              - type: 'null'
              - "$ref": "#/components/schemas/SnowflakeType"
          maxItems: 100
          uniqueItems: true
        replied_user:
          type:
            - boolean
            - 'null'
    MessageAttachmentRequest:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        filename:
          type:
            - string
            - 'null'
          maxLength: 1024
        description:
          type:
            - string
            - 'null'
          maxLength: 1024
        is_remix:
          type:
            - boolean
            - 'null'
      required:
        - id
    MessageAttachmentResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        filename:
          type: string
        size:
          type: integer
          format: int32
        url:
          type: string
          format: uri
        proxy_url:
          type: string
          format: uri
        width:
          type:
            - integer
            - 'null'
          format: int32
        height:
          type:
            - integer
            - 'null'
          format: int32
        duration_secs:
          type:
            - number
            - 'null'
          format: double
        waveform:
          type:
            - string
            - 'null'
        description:
          type:
            - string
            - 'null'
        content_type:
          type:
            - string
            - 'null'
        ephemeral:
          type:
            - boolean
            - 'null'
        title:
          type:
            - string
            - 'null'
        application:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ApplicationResponse"
        clip_created_at:
          type:
            - string
            - 'null'
          format: date-time
        clip_participants:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/UserResponse"
      required:
        - id
        - filename
        - size
        - url
        - proxy_url
    MessageCallResponse:
      type: object
      properties:
        ended_timestamp:
          type:
            - string
            - 'null'
          format: date-time
        participants:
          type: array
          items:
            "$ref": "#/components/schemas/SnowflakeType"
          uniqueItems: true
      required:
        - participants
    MessageComponentActionRowResponse:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 1
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        id:
          type: integer
          format: int32
        components:
          type:
            - array
            - 'null'
          items:
            oneOf:
              - "$ref": "#/components/schemas/MessageComponentButtonResponse"
              - "$ref": "#/components/schemas/MessageComponentChannelSelectResponse"
              - "$ref": "#/components/schemas/MessageComponentInputTextResponse"
              - "$ref": "#/components/schemas/MessageComponentMentionableSelectResponse"
              - "$ref": "#/components/schemas/MessageComponentRoleSelectResponse"
              - "$ref": "#/components/schemas/MessageComponentStringSelectResponse"
              - "$ref": "#/components/schemas/MessageComponentUserSelectResponse"
      required:
        - type
        - id
    MessageComponentButtonResponse:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 2
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        id:
          type: integer
          format: int32
        custom_id:
          type:
            - string
            - 'null'
        style:
          "$ref": "#/components/schemas/ButtonStyleTypes"
        label:
          type:
            - string
            - 'null'
        disabled:
          type:
            - boolean
            - 'null'
        emoji:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageComponentEmojiResponse"
        url:
          type:
            - string
            - 'null'
          maxLength: 2048
          format: uri
        sku_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
      required:
        - type
        - id
        - style
    MessageComponentChannelSelectResponse:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 8
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        id:
          type: integer
          format: int32
        custom_id:
          type: string
        placeholder:
          type:
            - string
            - 'null'
        min_values:
          type:
            - integer
            - 'null'
          format: int32
        max_values:
          type:
            - integer
            - 'null'
          format: int32
        disabled:
          type:
            - boolean
            - 'null'
        channel_types:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/ChannelTypes"
          uniqueItems: true
      required:
        - type
        - id
        - custom_id
    MessageComponentEmojiResponse:
      type: object
      properties:
        id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        animated:
          type:
            - boolean
            - 'null'
      required:
        - name
    MessageComponentInputTextResponse:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 4
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        id:
          type: integer
          format: int32
        custom_id:
          type: string
        style:
          "$ref": "#/components/schemas/TextStyleTypes"
        label:
          type:
            - string
            - 'null'
        value:
          type:
            - string
            - 'null'
        placeholder:
          type:
            - string
            - 'null'
        required:
          type:
            - boolean
            - 'null'
        min_length:
          type:
            - integer
            - 'null'
          format: int32
        max_length:
          type:
            - integer
            - 'null'
          format: int32
      required:
        - type
        - id
        - custom_id
        - style
    MessageComponentInteractionMetadataResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        type:
          type: integer
          enum:
            - 3
          allOf:
            - "$ref": "#/components/schemas/InteractionTypes"
          format: int32
        user:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserResponse"
        authorizing_integration_owners:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/SnowflakeType"
        original_response_message_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        interacted_message_id:
          "$ref": "#/components/schemas/SnowflakeType"
      required:
        - id
        - type
        - authorizing_integration_owners
        - interacted_message_id
    MessageComponentMentionableSelectResponse:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 7
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        id:
          type: integer
          format: int32
        custom_id:
          type: string
        placeholder:
          type:
            - string
            - 'null'
        min_values:
          type:
            - integer
            - 'null'
          format: int32
        max_values:
          type:
            - integer
            - 'null'
          format: int32
        disabled:
          type:
            - boolean
            - 'null'
      required:
        - type
        - id
        - custom_id
    MessageComponentRoleSelectResponse:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 6
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        id:
          type: integer
          format: int32
        custom_id:
          type: string
        placeholder:
          type:
            - string
            - 'null'
        min_values:
          type:
            - integer
            - 'null'
          format: int32
        max_values:
          type:
            - integer
            - 'null'
          format: int32
        disabled:
          type:
            - boolean
            - 'null'
      required:
        - type
        - id
        - custom_id
    MessageComponentStringSelectResponse:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 3
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        id:
          type: integer
          format: int32
        custom_id:
          type: string
        placeholder:
          type:
            - string
            - 'null'
        min_values:
          type:
            - integer
            - 'null'
          format: int32
        max_values:
          type:
            - integer
            - 'null'
          format: int32
        disabled:
          type:
            - boolean
            - 'null'
        options:
          type:
            - array
            - 'null'
          items:
            oneOf:
              - type: 'null'
              - "$ref": "#/components/schemas/SelectOptionResponse"
      required:
        - type
        - id
        - custom_id
    MessageComponentTypes:
      type: integer
      oneOf:
        - title: ACTION_ROW
          description: Container for other components
          const: 1
        - title: BUTTON
          description: Button object
          const: 2
        - title: STRING_SELECT
          description: Select menu for picking from defined text options
          const: 3
        - title: INPUT_TEXT
          description: Text input object
          const: 4
        - title: USER_SELECT
          description: Select menu for users
          const: 5
        - title: ROLE_SELECT
          description: Select menu for roles
          const: 6
        - title: MENTIONABLE_SELECT
          description: Select menu for mentionables (users and roles)
          const: 7
        - title: CHANNEL_SELECT
          description: Select menu for channels
          const: 8
      format: int32
    MessageComponentUserSelectResponse:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 5
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        id:
          type: integer
          format: int32
        custom_id:
          type: string
        placeholder:
          type:
            - string
            - 'null'
        min_values:
          type:
            - integer
            - 'null'
          format: int32
        max_values:
          type:
            - integer
            - 'null'
          format: int32
        disabled:
          type:
            - boolean
            - 'null'
      required:
        - type
        - id
        - custom_id
    MessageEditRequestPartial:
      type: object
      properties:
        content:
          type:
            - string
            - 'null'
          maxLength: 4000
        embeds:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/RichEmbed"
          maxItems: 10
        flags:
          type:
            - integer
            - 'null'
        allowed_mentions:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageAllowedMentionsRequest"
        sticker_ids:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/SnowflakeType"
          maxItems: 1521
        components:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/ActionRow"
          maxItems: 5
        attachments:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/MessageAttachmentRequest"
          maxItems: 10
    MessageEmbedAuthorResponse:
      type: object
      properties:
        name:
          type: string
        url:
          type:
            - string
            - 'null'
        icon_url:
          type:
            - string
            - 'null'
        proxy_icon_url:
          type:
            - string
            - 'null'
          format: uri
      required:
        - name
    MessageEmbedFieldResponse:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        inline:
          type: boolean
      required:
        - name
        - value
        - inline
    MessageEmbedFooterResponse:
      type: object
      properties:
        text:
          type: string
        icon_url:
          type:
            - string
            - 'null'
        proxy_icon_url:
          type:
            - string
            - 'null'
          format: uri
      required:
        - text
    MessageEmbedImageResponse:
      type: object
      properties:
        url:
          type:
            - string
            - 'null'
        proxy_url:
          type:
            - string
            - 'null'
          format: uri
        width:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UInt32Type"
        height:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UInt32Type"
        placeholder:
          type:
            - string
            - 'null'
        placeholder_version:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UInt32Type"
    MessageEmbedProviderResponse:
      type: object
      properties:
        name:
          type: string
        url:
          type:
            - string
            - 'null'
          format: uri
      required:
        - name
    MessageEmbedResponse:
      type: object
      properties:
        type:
          type: string
        url:
          type:
            - string
            - 'null'
          format: uri
        title:
          type:
            - string
            - 'null'
        description:
          type:
            - string
            - 'null'
        color:
          type:
            - integer
            - 'null'
          format: int32
        timestamp:
          type:
            - string
            - 'null'
          format: date-time
        fields:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/MessageEmbedFieldResponse"
        author:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageEmbedAuthorResponse"
        provider:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageEmbedProviderResponse"
        image:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageEmbedImageResponse"
        thumbnail:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageEmbedImageResponse"
        video:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageEmbedVideoResponse"
        footer:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageEmbedFooterResponse"
      required:
        - type
    MessageEmbedVideoResponse:
      type: object
      properties:
        url:
          type:
            - string
            - 'null'
        proxy_url:
          type:
            - string
            - 'null'
          format: uri
        width:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UInt32Type"
        height:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UInt32Type"
        placeholder:
          type:
            - string
            - 'null'
        placeholder_version:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UInt32Type"
    MessageInteractionResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        type:
          "$ref": "#/components/schemas/InteractionTypes"
        name:
          type: string
        user:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserResponse"
        name_localized:
          type:
            - string
            - 'null'
      required:
        - id
        - type
        - name
    MessageMentionChannelResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        type:
          "$ref": "#/components/schemas/ChannelTypes"
        guild_id:
          "$ref": "#/components/schemas/SnowflakeType"
      required:
        - id
        - name
        - type
        - guild_id
    MessageReactionCountDetailsResponse:
      type: object
      properties:
        burst:
          type: integer
          format: int32
        normal:
          type: integer
          format: int32
      required:
        - burst
        - normal
    MessageReactionEmojiResponse:
      type: object
      properties:
        id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        name:
          type:
            - string
            - 'null'
        animated:
          type:
            - boolean
            - 'null'
    MessageReactionResponse:
      type: object
      properties:
        emoji:
          "$ref": "#/components/schemas/MessageReactionEmojiResponse"
        count:
          type: integer
          format: int32
        count_details:
          "$ref": "#/components/schemas/MessageReactionCountDetailsResponse"
        burst_colors:
          type: array
          items:
            type: string
        me_burst:
          type: boolean
        me:
          type: boolean
      required:
        - emoji
        - count
        - count_details
        - burst_colors
        - me_burst
        - me
    MessageReferenceResponse:
      type: object
      properties:
        type:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageReferenceType"
        channel_id:
          "$ref": "#/components/schemas/SnowflakeType"
        message_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        guild_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
      required:
        - channel_id
    MessageReferenceType:
      type: integer
      oneOf:
        - title: DEFAULT
          description: Reference to a message
          const: 0
      format: int32
    MessageResponse:
      type: object
      properties:
        type:
          "$ref": "#/components/schemas/MessageType"
        content:
          type: string
        mentions:
          type: array
          items:
            "$ref": "#/components/schemas/UserResponse"
        mention_roles:
          type: array
          items:
            "$ref": "#/components/schemas/SnowflakeType"
          uniqueItems: true
        attachments:
          type: array
          items:
            "$ref": "#/components/schemas/MessageAttachmentResponse"
        embeds:
          type: array
          items:
            "$ref": "#/components/schemas/MessageEmbedResponse"
        timestamp:
          type: string
          format: date-time
        edited_timestamp:
          type:
            - string
            - 'null'
          format: date-time
        flags:
          type: integer
          format: int32
        components:
          type: array
          items:
            oneOf:
              - "$ref": "#/components/schemas/MessageComponentActionRowResponse"
              - "$ref": "#/components/schemas/MessageComponentButtonResponse"
              - "$ref": "#/components/schemas/MessageComponentChannelSelectResponse"
              - "$ref": "#/components/schemas/MessageComponentInputTextResponse"
              - "$ref": "#/components/schemas/MessageComponentMentionableSelectResponse"
              - "$ref": "#/components/schemas/MessageComponentRoleSelectResponse"
              - "$ref": "#/components/schemas/MessageComponentStringSelectResponse"
              - "$ref": "#/components/schemas/MessageComponentUserSelectResponse"
        resolved:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ResolvedObjectsResponse"
        stickers:
          type:
            - array
            - 'null'
          items:
            oneOf:
              - "$ref": "#/components/schemas/GuildStickerResponse"
              - "$ref": "#/components/schemas/StandardStickerResponse"
        sticker_items:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/MessageStickerItemResponse"
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        channel_id:
          "$ref": "#/components/schemas/SnowflakeType"
        author:
          "$ref": "#/components/schemas/UserResponse"
        pinned:
          type: boolean
        mention_everyone:
          type: boolean
        tts:
          type: boolean
        call:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageCallResponse"
        activity:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageActivityResponse"
        application:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/BasicApplicationResponse"
        application_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        interaction:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageInteractionResponse"
        nonce:
          oneOf:
            - type: integer
              minimum: !!int -9223372036854776000
              maximum: 9223372036854776000
              format: int64
            - type: string
              maxLength: 25
              format: nonce
            - type: 'null'
        webhook_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        message_reference:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageReferenceResponse"
        thread:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ThreadResponse"
        mention_channels:
          type:
            - array
            - 'null'
          items:
            oneOf:
              - type: 'null'
              - "$ref": "#/components/schemas/MessageMentionChannelResponse"
        role_subscription_data:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageRoleSubscriptionDataResponse"
        purchase_notification:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/PurchaseNotificationResponse"
        position:
          type:
            - integer
            - 'null'
          format: int32
        interaction_metadata:
          oneOf:
            - "$ref": "#/components/schemas/ApplicationCommandInteractionMetadataResponse"
            - "$ref": "#/components/schemas/MessageComponentInteractionMetadataResponse"
            - "$ref": "#/components/schemas/ModalSubmitInteractionMetadataResponse"
            - type: 'null'
        reactions:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/MessageReactionResponse"
        referenced_message:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/BasicMessageResponse"
      required:
        - type
        - content
        - mentions
        - mention_roles
        - attachments
        - embeds
        - timestamp
        - flags
        - components
        - id
        - channel_id
        - author
        - pinned
        - mention_everyone
        - tts
    MessageRoleSubscriptionDataResponse:
      type: object
      properties:
        role_subscription_listing_id:
          "$ref": "#/components/schemas/SnowflakeType"
        tier_name:
          type: string
        total_months_subscribed:
          type: integer
          format: int32
        is_renewal:
          type: boolean
      required:
        - role_subscription_listing_id
        - tier_name
        - total_months_subscribed
        - is_renewal
    MessageStickerItemResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        format_type:
          "$ref": "#/components/schemas/StickerFormatTypes"
      required:
        - id
        - name
        - format_type
    MessageType:
      type: integer
      oneOf:
        - title: DEFAULT
          const: 0
        - title: RECIPIENT_ADD
          const: 1
        - title: RECIPIENT_REMOVE
          const: 2
        - title: CALL
          const: 3
        - title: CHANNEL_NAME_CHANGE
          const: 4
        - title: CHANNEL_ICON_CHANGE
          const: 5
        - title: CHANNEL_PINNED_MESSAGE
          const: 6
        - title: USER_JOIN
          const: 7
        - title: GUILD_BOOST
          const: 8
        - title: GUILD_BOOST_TIER_1
          const: 9
        - title: GUILD_BOOST_TIER_2
          const: 10
        - title: GUILD_BOOST_TIER_3
          const: 11
        - title: CHANNEL_FOLLOW_ADD
          const: 12
        - title: GUILD_DISCOVERY_DISQUALIFIED
          const: 14
        - title: GUILD_DISCOVERY_REQUALIFIED
          const: 15
        - title: GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING
          const: 16
        - title: GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING
          const: 17
        - title: THREAD_CREATED
          const: 18
        - title: REPLY
          const: 19
        - title: CHAT_INPUT_COMMAND
          const: 20
        - title: THREAD_STARTER_MESSAGE
          const: 21
        - title: GUILD_INVITE_REMINDER
          const: 22
        - title: CONTEXT_MENU_COMMAND
          const: 23
        - title: AUTO_MODERATION_ACTION
          const: 24
        - title: ROLE_SUBSCRIPTION_PURCHASE
          const: 25
        - title: INTERACTION_PREMIUM_UPSELL
          const: 26
        - title: STAGE_START
          const: 27
        - title: STAGE_END
          const: 28
        - title: STAGE_SPEAKER
          const: 29
        - title: STAGE_TOPIC
          const: 31
        - title: GUILD_APPLICATION_PREMIUM_SUBSCRIPTION
          const: 32
        - title: GUILD_INCIDENT_ALERT_MODE_ENABLED
          const: 36
        - title: GUILD_INCIDENT_ALERT_MODE_DISABLED
          const: 37
        - title: GUILD_INCIDENT_REPORT_RAID
          const: 38
        - title: GUILD_INCIDENT_REPORT_FALSE_ALARM
          const: 39
      format: int32
    ModalSubmitInteractionMetadataResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        type:
          type: integer
          enum:
            - 5
          allOf:
            - "$ref": "#/components/schemas/InteractionTypes"
          format: int32
        user:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserResponse"
        authorizing_integration_owners:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/SnowflakeType"
        original_response_message_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        triggering_interaction_metadata:
          oneOf:
            - "$ref": "#/components/schemas/ApplicationCommandInteractionMetadataResponse"
            - "$ref": "#/components/schemas/MessageComponentInteractionMetadataResponse"
      required:
        - id
        - type
        - authorizing_integration_owners
        - triggering_interaction_metadata
    OAuth2Scopes:
      type: string
      oneOf:
        - title: IDENTIFY
          description: allows /users/@me without email
          const: identify
        - title: EMAIL
          description: enables /users/@me to return an email
          const: email
        - title: CONNECTIONS
          description: allows /users/@me/connections to return linked third-party accounts
          const: connections
        - title: GUILDS
          description: allows /users/@me/guilds to return basic information about all of a user's guilds
          const: guilds
        - title: GUILDS_JOIN
          description: allows /guilds/{guild.id}/members/{user.id} to be used for joining users to a guild
          const: guilds.join
        - title: GUILDS_MEMBERS_READ
          description: allows /users/@me/guilds/{guild.id}/member to return a user's member information in a guild
          const: guilds.members.read
        - title: GDM_JOIN
          description: allows your app to join users to a group dm
          const: gdm.join
        - title: BOT
          description: for oauth2 bots, this puts the bot in the user's selected guild by default
          const: bot
        - title: RPC
          description: for local rpc server access, this allows you to control a user's local Discord client - requires Discord approval
          const: rpc
        - title: RPC_NOTIFICATIONS_READ
          description: for local rpc server access, this allows you to receive notifications pushed out to the user - requires Discord approval
          const: rpc.notifications.read
        - title: RPC_VOICE_READ
          description: for local rpc server access, this allows you to read a user's voice settings and listen for voice events - requires Discord approval
          const: rpc.voice.read
        - title: RPC_VOICE_WRITE
          description: for local rpc server access, this allows you to update a user's voice settings - requires Discord approval
          const: rpc.voice.write
        - title: RPC_VIDEO_READ
          description: for local rpc server access, this allows you to read a user's video status - requires Discord approval
          const: rpc.video.read
        - title: RPC_VIDEO_WRITE
          description: for local rpc server access, this allows you to update a user's video settings - requires Discord approval
          const: rpc.video.write
        - title: RPC_SCREENSHARE_READ
          description: for local rpc server access, this allows you to read a user's screenshare status- requires Discord approval
          const: rpc.screenshare.read
        - title: RPC_SCREENSHARE_WRITE
          description: for local rpc server access, this allows you to update a user's screenshare settings- requires Discord approval
          const: rpc.screenshare.write
        - title: RPC_ACTIVITIES_WRITE
          description: for local rpc server access, this allows you to update a user's activity - requires Discord approval
          const: rpc.activities.write
        - title: WEBHOOK_INCOMING
          description: this generates a webhook that is returned in the oauth token response for authorization code grants
          const: webhook.incoming
        - title: MESSAGES_READ
          description: for local rpc server api access, this allows you to read messages from all client channels (otherwise restricted to channels/guilds your app creates)
          const: messages.read
        - title: APPLICATIONS_BUILDS_UPLOAD
          description: allows your app to upload/update builds for a user's applications - requires Discord approval
          const: applications.builds.upload
        - title: APPLICATIONS_BUILDS_READ
          description: allows your app to read build data for a user's applications
          const: applications.builds.read
        - title: APPLICATIONS_COMMANDS
          description: allows your app to use commands in a guild
          const: applications.commands
        - title: APPLICATIONS_COMMANDS_PERMISSIONS_UPDATE
          description: allows your app to update permissions for its commands in a guild a user has permissions to
          const: applications.commands.permissions.update
        - title: APPLICATIONS_COMMANDS_UPDATE
          description: allows your app to update its commands using a Bearer token - client credentials grant only
          const: applications.commands.update
        - title: APPLICATIONS_STORE_UPDATE
          description: allows your app to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications
          const: applications.store.update
        - title: APPLICATIONS_ENTITLEMENTS
          description: allows your app to read entitlements for a user's applications
          const: applications.entitlements
        - title: ACTIVITIES_READ
          description: allows your app to fetch data from a user's "Now Playing/Recently Played" list - requires Discord approval
          const: activities.read
        - title: ACTIVITIES_WRITE
          description: allows your app to update a user's activity - requires Discord approval (NOT REQUIRED FOR GAMESDK ACTIVITY MANAGER)
          const: activities.write
        - title: RELATIONSHIPS_READ
          description: allows your app to know a user's friends and implicit relationships - requires Discord approval
          const: relationships.read
        - title: VOICE
          description: allows your app to connect to voice on user's behalf and see all the voice members - requires Discord approval
          const: voice
        - title: DM_CHANNELS_READ
          description: allows your app to see information about the user's DMs and group DMs - requires Discord approval
          const: dm_channels.read
        - title: ROLE_CONNECTIONS_WRITE
          description: allows your app to update a user's connection and metadata for the app
          const: role_connections.write
        - title: OPENID
          description: for OpenID Connect, this allows your app to receive user id and basic profile information
          const: openid
    PrivateChannelRequestPartial:
      type: object
      properties:
        name:
          type:
            - string
            - 'null'
          maxLength: 100
        icon:
          type:
            - string
            - 'null'
    PrivateChannelResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        type:
          type: integer
          enum:
            - 1
          allOf:
            - "$ref": "#/components/schemas/ChannelTypes"
          format: int32
        last_message_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        flags:
          type: integer
          format: int32
        last_pin_timestamp:
          type:
            - string
            - 'null'
          format: date-time
        recipients:
          type: array
          items:
            "$ref": "#/components/schemas/UserResponse"
      required:
        - id
        - type
        - flags
        - recipients
    PrivateGroupChannelResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        type:
          type: integer
          enum:
            - 3
          allOf:
            - "$ref": "#/components/schemas/ChannelTypes"
          format: int32
        last_message_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        flags:
          type: integer
          format: int32
        last_pin_timestamp:
          type:
            - string
            - 'null'
          format: date-time
        recipients:
          type: array
          items:
            "$ref": "#/components/schemas/UserResponse"
        name:
          type:
            - string
            - 'null'
        icon:
          type:
            - string
            - 'null'
        owner_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        managed:
          type:
            - boolean
            - 'null'
        application_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
      required:
        - id
        - type
        - flags
        - recipients
    PurchaseNotificationResponse:
      type: object
      properties:
        type:
          "$ref": "#/components/schemas/PurchaseType"
        guild_product_purchase:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/GuildProductPurchaseResponse"
      required:
        - type
    PurchaseType:
      type: integer
      oneOf:
        - title: GUILD_PRODUCT
          const: 0
      format: int32
    RecurrenceRuleFrequencies:
      type: integer
      oneOf:
        - title: DAILY
          const: 3
        - title: WEEKLY
          const: 2
        - title: MONTHLY
          const: 1
        - title: YEARLY
          const: 0
      format: int32
    RecurrenceRuleMonths:
      type: integer
      oneOf:
        - title: JANUARY
          const: 1
        - title: FEBURARY
          const: 2
        - title: MARCH
          const: 3
        - title: APRIL
          const: 4
        - title: MAY
          const: 5
        - title: JUNE
          const: 6
        - title: JULY
          const: 7
        - title: AUGUEST
          const: 8
        - title: SEPTEMBER
          const: 9
        - title: OCTOBER
          const: 10
        - title: NOVEMBER
          const: 11
        - title: DECEMBER
          const: 12
      format: int32
    RecurrenceRuleResponse:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type:
            - string
            - 'null'
          format: date-time
        frequency:
          "$ref": "#/components/schemas/RecurrenceRuleFrequencies"
        interval:
          type:
            - integer
            - 'null'
          format: int32
        by_weekday:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/RecurrenceRuleWeekdays"
          uniqueItems: true
        by_n_weekday:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/ByNWeekdayResponse"
        by_month:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/RecurrenceRuleMonths"
          uniqueItems: true
        by_month_day:
          type:
            - array
            - 'null'
          items:
            type: integer
            format: int32
          uniqueItems: true
        by_year_day:
          type:
            - array
            - 'null'
          items:
            type: integer
            format: int32
          uniqueItems: true
        count:
          type:
            - integer
            - 'null'
          format: int32
      required:
        - start
        - frequency
    RecurrenceRuleWeekdays:
      type: integer
      oneOf:
        - title: MONDAY
          const: 0
        - title: TUESDAY
          const: 1
        - title: WEDNESDAY
          const: 2
        - title: THURSDAY
          const: 3
        - title: FRIDAY
          const: 4
        - title: SATURDAY
          const: 5
        - title: SUNDAY
          const: 6
      format: int32
    ResolvedObjectsResponse:
      type: object
      properties:
        users:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/UserResponse"
        members:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/GuildMemberResponse"
        channels:
          type: object
          additionalProperties:
            oneOf:
              - "$ref": "#/components/schemas/GuildChannelResponse"
              - "$ref": "#/components/schemas/PrivateChannelResponse"
              - "$ref": "#/components/schemas/PrivateGroupChannelResponse"
              - "$ref": "#/components/schemas/ThreadResponse"
        roles:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/GuildRoleResponse"
      required:
        - users
        - members
        - channels
        - roles
    RichEmbed:
      type: object
      properties:
        type:
          type:
            - string
            - 'null'
          maxLength: 152133
        url:
          type:
            - string
            - 'null'
          maxLength: 2048
          format: uri
        title:
          type:
            - string
            - 'null'
          maxLength: 256
        color:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 16777215
        timestamp:
          type:
            - string
            - 'null'
          format: date-time
        description:
          type:
            - string
            - 'null'
          maxLength: 4096
        author:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/RichEmbedAuthor"
        image:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/RichEmbedImage"
        thumbnail:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/RichEmbedThumbnail"
        footer:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/RichEmbedFooter"
        fields:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/RichEmbedField"
          maxItems: 25
        provider:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/RichEmbedProvider"
        video:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/RichEmbedVideo"
    RichEmbedAuthor:
      type: object
      properties:
        name:
          type:
            - string
            - 'null'
          maxLength: 256
        url:
          type:
            - string
            - 'null'
          maxLength: 2048
          format: uri
        icon_url:
          type:
            - string
            - 'null'
          maxLength: 2048
          format: uri
    RichEmbedField:
      type: object
      properties:
        name:
          type: string
          maxLength: 256
        value:
          type: string
          maxLength: 1024
        inline:
          type:
            - boolean
            - 'null'
      required:
        - name
        - value
    RichEmbedFooter:
      type: object
      properties:
        text:
          type:
            - string
            - 'null'
          maxLength: 2048
        icon_url:
          type:
            - string
            - 'null'
          maxLength: 2048
          format: uri
    RichEmbedImage:
      type: object
      properties:
        url:
          type:
            - string
            - 'null'
          maxLength: 2048
          format: uri
        width:
          type:
            - integer
            - 'null'
        height:
          type:
            - integer
            - 'null'
        placeholder:
          type:
            - string
            - 'null'
          maxLength: 64
        placeholder_version:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 2147483647
    RichEmbedProvider:
      type: object
      properties:
        name:
          type:
            - string
            - 'null'
          maxLength: 256
        url:
          type:
            - string
            - 'null'
          maxLength: 2048
          format: uri
    RichEmbedThumbnail:
      type: object
      properties:
        url:
          type:
            - string
            - 'null'
          maxLength: 2048
          format: uri
        width:
          type:
            - integer
            - 'null'
        height:
          type:
            - integer
            - 'null'
        placeholder:
          type:
            - string
            - 'null'
          maxLength: 64
        placeholder_version:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 2147483647
    RichEmbedVideo:
      type: object
      properties:
        url:
          type:
            - string
            - 'null'
          maxLength: 2048
          format: uri
        width:
          type:
            - integer
            - 'null'
        height:
          type:
            - integer
            - 'null'
        placeholder:
          type:
            - string
            - 'null'
          maxLength: 64
        placeholder_version:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 2147483647
    RoleSelect:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 6
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        custom_id:
          type: string
          maxLength: 100
        placeholder:
          type:
            - string
            - 'null'
          maxLength: 150
        min_values:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 25
        max_values:
          type:
            - integer
            - 'null'
          minimum: 1
          maximum: 25
        disabled:
          type:
            - boolean
            - 'null'
        default_values:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/RoleSelectDefaultValue"
          maxItems: 25
      required:
        - type
        - custom_id
    RoleSelectDefaultValue:
      type: object
      properties:
        type:
          type: string
          enum:
            - role
          allOf:
            - "$ref": "#/components/schemas/SnowflakeSelectDefaultValueTypes"
        id:
          "$ref": "#/components/schemas/SnowflakeType"
      required:
        - type
        - id
    ScheduledEventResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        guild_id:
          "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        description:
          type:
            - string
            - 'null'
        channel_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        creator_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        creator:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserResponse"
        image:
          type:
            - string
            - 'null'
        scheduled_start_time:
          type: string
          format: date-time
        scheduled_end_time:
          type:
            - string
            - 'null'
          format: date-time
        status:
          "$ref": "#/components/schemas/GuildScheduledEventStatuses"
        entity_type:
          "$ref": "#/components/schemas/GuildScheduledEventEntityTypes"
        entity_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        recurrence_rule:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/RecurrenceRuleResponse"
        user_count:
          type:
            - integer
            - 'null'
          format: int32
        privacy_level:
          "$ref": "#/components/schemas/GuildScheduledEventPrivacyLevels"
        user_rsvp:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ScheduledEventUserResponse"
      required:
        - id
        - guild_id
        - name
        - scheduled_start_time
        - status
        - entity_type
        - privacy_level
    ScheduledEventUserResponse:
      type: object
      properties:
        guild_scheduled_event_id:
          "$ref": "#/components/schemas/SnowflakeType"
        guild_scheduled_event_exception_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        user_id:
          "$ref": "#/components/schemas/SnowflakeType"
        user:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UserResponse"
        member:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/GuildMemberResponse"
        response:
          "$ref": "#/components/schemas/GuildScheduledEventUserResponses"
      required:
        - guild_scheduled_event_id
        - user_id
        - response
    SelectOption:
      type: object
      properties:
        label:
          type: string
          minLength: 1
          maxLength: 100
        value:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type:
            - string
            - 'null'
          maxLength: 100
        emoji:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/Emoji"
        default:
          type:
            - boolean
            - 'null'
      required:
        - label
        - value
    SelectOptionResponse:
      type: object
      properties:
        label:
          type: string
        value:
          type: string
        description:
          type:
            - string
            - 'null'
        emoji:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/MessageComponentEmojiResponse"
        default:
          type:
            - boolean
            - 'null'
      required:
        - label
        - value
    SnowflakeSelectDefaultValueTypes:
      type: string
      oneOf:
        - title: USER
          const: user
        - title: ROLE
          const: role
        - title: CHANNEL
          const: channel
    SnowflakeType:
      type: string
      pattern: "^(0|[1-9][0-9]*)$"
      format: snowflake
    StandardStickerResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        tags:
          type: string
        type:
          type: integer
          enum:
            - 1
          allOf:
            - "$ref": "#/components/schemas/StickerTypes"
          format: int32
        format_type:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/StickerFormatTypes"
        description:
          type:
            - string
            - 'null'
        pack_id:
          "$ref": "#/components/schemas/SnowflakeType"
        sort_value:
          type: integer
          format: int32
      required:
        - id
        - name
        - tags
        - type
        - pack_id
        - sort_value
    StickerFormatTypes:
      type: integer
      oneOf:
        - title: PNG
          const: 1
        - title: APNG
          const: 2
        - title: LOTTIE
          const: 3
        - title: GIF
          const: 4
      format: int32
    StickerTypes:
      type: integer
      oneOf:
        - title: STANDARD
          description: an official sticker in a pack, part of Nitro or in a removed purchasable pack
          const: 1
        - title: GUILD
          description: a sticker uploaded to a guild for the guild's members
          const: 2
      format: int32
    StringSelect:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 3
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        custom_id:
          type: string
          maxLength: 100
        placeholder:
          type:
            - string
            - 'null'
          maxLength: 150
        min_values:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 25
        max_values:
          type:
            - integer
            - 'null'
          minimum: 1
          maximum: 25
        disabled:
          type:
            - boolean
            - 'null'
        options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
          minItems: 1
          maxItems: 25
      required:
        - type
        - custom_id
        - options
    TextStyleTypes:
      type: integer
      oneOf:
        - title: SHORT
          description: Single-line input
          const: 1
        - title: PARAGRAPH
          description: Multi-line input
          const: 2
      format: int32
    ThreadAutoArchiveDuration:
      type: integer
      oneOf:
        - title: ONE_HOUR
          description: One hour
          const: 60
        - title: ONE_DAY
          description: One day
          const: 1440
        - title: THREE_DAY
          description: Three days
          const: 4320
        - title: SEVEN_DAY
          description: Seven days
          const: 10080
      format: int32
    ThreadMemberResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        user_id:
          "$ref": "#/components/schemas/SnowflakeType"
        join_timestamp:
          type: string
          format: date-time
        flags:
          type: integer
          format: int32
        member:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/GuildMemberResponse"
      required:
        - id
        - user_id
        - join_timestamp
        - flags
    ThreadMetadataResponse:
      type: object
      properties:
        archived:
          type: boolean
        archive_timestamp:
          type:
            - string
            - 'null'
          format: date-time
        auto_archive_duration:
          "$ref": "#/components/schemas/ThreadAutoArchiveDuration"
        locked:
          type: boolean
        create_timestamp:
          type:
            - string
            - 'null'
          format: date-time
        invitable:
          type:
            - boolean
            - 'null'
      required:
        - archived
        - auto_archive_duration
        - locked
    ThreadResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        type:
          type: integer
          enum:
            - 10
            - 11
            - 12
          allOf:
            - "$ref": "#/components/schemas/ChannelTypes"
          format: int32
        last_message_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        flags:
          type: integer
          format: int32
        last_pin_timestamp:
          type:
            - string
            - 'null'
          format: date-time
        guild_id:
          "$ref": "#/components/schemas/SnowflakeType"
        name:
          type: string
        parent_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        rate_limit_per_user:
          type:
            - integer
            - 'null'
          format: int32
        bitrate:
          type:
            - integer
            - 'null'
          format: int32
        user_limit:
          type:
            - integer
            - 'null'
          format: int32
        rtc_region:
          type:
            - string
            - 'null'
        video_quality_mode:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/VideoQualityModes"
        permissions:
          type:
            - string
            - 'null'
        owner_id:
          "$ref": "#/components/schemas/SnowflakeType"
        thread_metadata:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ThreadMetadataResponse"
        message_count:
          type: integer
          format: int32
        member_count:
          type: integer
          format: int32
        total_message_sent:
          type: integer
          format: int32
        applied_tags:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/SnowflakeType"
        member:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ThreadMemberResponse"
      required:
        - id
        - type
        - flags
        - guild_id
        - name
        - owner_id
        - message_count
        - member_count
        - total_message_sent
    ThreadSortOrder:
      type: integer
      oneOf:
        - title: LATEST_ACTIVITY
          description: Sort forum posts by activity
          const: 0
        - title: CREATION_DATE
          description: Sort forum posts by creation time (from most recent to oldest)
          const: 1
      format: int32
    UInt32Type:
      type: integer
      minimum: 0
      maximum: 4294967295
      format: int64
    UpdateDefaultReactionEmojiRequest:
      type: object
      properties:
        emoji_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        emoji_name:
          type:
            - string
            - 'null'
          maxLength: 100
    UpdateGuildChannelRequestPartial:
      type: object
      properties:
        type:
          oneOf:
            - type: 'null'
            - type: integer
              enum:
                - 0
                - 2
                - 4
                - 5
                - 13
                - 14
                - 15
                - 16
              allOf:
                - "$ref": "#/components/schemas/ChannelTypes"
              format: int32
        name:
          type: string
          minLength: 1
          maxLength: 100
        position:
          type:
            - integer
            - 'null'
          minimum: 0
          format: int32
        topic:
          type:
            - string
            - 'null'
          maxLength: 4096
        bitrate:
          type:
            - integer
            - 'null'
          minimum: 8000
          format: int32
        user_limit:
          type:
            - integer
            - 'null'
          minimum: 0
          format: int32
        nsfw:
          type:
            - boolean
            - 'null'
        rate_limit_per_user:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 21600
        parent_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        permission_overwrites:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/ChannelPermissionOverwriteRequest"
          maxItems: 100
        rtc_region:
          type:
            - string
            - 'null'
        video_quality_mode:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/VideoQualityModes"
        default_auto_archive_duration:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ThreadAutoArchiveDuration"
        default_reaction_emoji:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/UpdateDefaultReactionEmojiRequest"
        default_thread_rate_limit_per_user:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 21600
        default_sort_order:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ThreadSortOrder"
        default_forum_layout:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ForumLayout"
        flags:
          type:
            - integer
            - 'null'
        available_tags:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/UpdateThreadTagRequest"
          maxItems: 20
    UpdateThreadRequestPartial:
      type: object
      properties:
        name:
          type:
            - string
            - 'null'
          maxLength: 100
        archived:
          type:
            - boolean
            - 'null'
        locked:
          type:
            - boolean
            - 'null'
        invitable:
          type:
            - boolean
            - 'null'
        auto_archive_duration:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/ThreadAutoArchiveDuration"
        rate_limit_per_user:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 21600
        flags:
          type:
            - integer
            - 'null'
        applied_tags:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/SnowflakeType"
          maxItems: 5
        bitrate:
          type:
            - integer
            - 'null'
          minimum: 8000
          format: int32
        user_limit:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 99
        rtc_region:
          type:
            - string
            - 'null'
        video_quality_mode:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/VideoQualityModes"
    UpdateThreadTagRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 20
        emoji_id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
        emoji_name:
          type:
            - string
            - 'null'
          maxLength: 100
        moderated:
          type:
            - boolean
            - 'null'
        id:
          oneOf:
            - type: 'null'
            - "$ref": "#/components/schemas/SnowflakeType"
      required:
        - name
    UserAvatarDecorationResponse:
      type: object
    UserResponse:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/SnowflakeType"
        username:
          type: string
        avatar:
          type:
            - string
            - 'null'
        discriminator:
          type: string
        public_flags:
          type: integer
          format: int32
        flags:
          "$ref": "#/components/schemas/Int53Type"
        bot:
          type:
            - boolean
            - 'null'
        system:
          type:
            - boolean
            - 'null'
        banner:
          type:
            - string
            - 'null'
        accent_color:
          type:
            - integer
            - 'null'
          format: int32
        global_name:
          type:
            - string
            - 'null'
      required:
        - id
        - username
        - discriminator
        - public_flags
        - flags
    UserSelect:
      type: object
      properties:
        type:
          type: integer
          enum:
            - 5
          allOf:
            - "$ref": "#/components/schemas/MessageComponentTypes"
          format: int32
        custom_id:
          type: string
          maxLength: 100
        placeholder:
          type:
            - string
            - 'null'
          maxLength: 150
        min_values:
          type:
            - integer
            - 'null'
          minimum: 0
          maximum: 25
        max_values:
          type:
            - integer
            - 'null'
          minimum: 1
          maximum: 25
        disabled:
          type:
            - boolean
            - 'null'
        default_values:
          type:
            - array
            - 'null'
          items:
            "$ref": "#/components/schemas/UserSelectDefaultValue"
          maxItems: 25
      required:
        - type
        - custom_id
    UserSelectDefaultValue:
      type: object
      properties:
        type:
          type: string
          enum:
            - user
          allOf:
            - "$ref": "#/components/schemas/SnowflakeSelectDefaultValueTypes"
        id:
          "$ref": "#/components/schemas/SnowflakeType"
      required:
        - type
        - id
    VerificationLevels:
      type: integer
      oneOf:
        - title: NONE
          description: unrestricted
          const: 0
        - title: LOW
          description: must have verified email on account
          const: 1
        - title: MEDIUM
          description: must be registered on Discord for longer than 5 minutes
          const: 2
        - title: HIGH
          description: must be a member of the server for longer than 10 minutes
          const: 3
        - title: VERY_HIGH
          description: must have a verified phone number
          const: 4
      format: int32
    VideoQualityModes:
      type: integer
      oneOf:
        - title: AUTO
          description: Discord chooses the quality for optimal performance
          const: 1
        - title: FULL
          description: 720p
          const: 2
      format: int32
    Error:
      type: object
      description: A single error, either for an API response or a specific field.
      properties:
        code:
          type: integer
          description: Discord internal error code. See error code reference
        message:
          type: string
          description: Human-readable error message
      required:
        - code
        - message
    InnerErrors:
      type: object
      properties:
        _errors:
          type: array
          description: The list of errors for this field
          items:
            "$ref": "#/components/schemas/Error"
      additionalProperties: false
      required:
        - _errors
    ErrorDetails:
      oneOf:
        - type: object
          additionalProperties:
            "$ref": "#/components/schemas/ErrorDetails"
        - "$ref": "#/components/schemas/InnerErrors"
    ErrorResponse:
      type: object
      description: Errors object returned by the Discord API
      allOf:
        - "$ref": "#/components/schemas/Error"
        - type: object
          properties:
            errors:
              "$ref": "#/components/schemas/ErrorDetails"
  securitySchemes:
    BotToken:
      type: apiKey
      description: Discord bot token
      name: Authorization
      in: header
    OAuth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: discord.com/oauth2/authorize
          refreshUrl: https://discord.com/api/oauth2/token
          scopes:
            activities.read: allows your app to fetch data from a user's "Now Playing/Recently Played" list - requires Discord approval
            activities.write: allows your app to update a user's activity - requires Discord approval (NOT REQUIRED FOR GAMESDK ACTIVITY MANAGER)
            applications.builds.read: allows your app to read build data for a user's applications
            applications.builds.upload: allows your app to upload/update builds for a user's applications - requires Discord approval
            applications.commands: allows your app to use commands in a guild
            applications.commands.permissions.update: allows your app to update permissions for its commands in a guild a user has permissions to
            applications.entitlements: allows your app to read entitlements for a user's applications
            applications.store.update: allows your app to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications
            bot: for oauth2 bots, this puts the bot in the user's selected guild by default
            connections: allows /users/@me/connections to return linked third-party accounts
            dm_channels.read: allows your app to see information about the user's DMs and group DMs - requires Discord approval
            email: enables /users/@me to return an email
            gdm.join: allows your app to join users to a group dm
            guilds: allows /users/@me/guilds to return basic information about all of a user's guilds
            guilds.join: allows /guilds/{guild.id}/members/{user.id} to be used for joining users to a guild
            guilds.members.read: allows /users/@me/guilds/{guild.id}/member to return a user's member information in a guild
            identify: allows /users/@me without email
            messages.read: for local rpc server api access, this allows you to read messages from all client channels (otherwise restricted to channels/guilds your app creates)
            openid: for OpenID Connect, this allows your app to receive user id and basic profile information
            relationships.read: allows your app to know a user's friends and implicit relationships - requires Discord approval
            rpc: for local rpc server access, this allows you to control a user's local Discord client - requires Discord approval
            rpc.activities.write: for local rpc server access, this allows you to update a user's activity - requires Discord approval
            rpc.notifications.read: for local rpc server access, this allows you to receive notifications pushed out to the user - requires Discord approval
            rpc.screenshare.read: for local rpc server access, this allows you to read a user's screenshare status- requires Discord approval
            rpc.screenshare.write: for local rpc server access, this allows you to update a user's screenshare settings- requires Discord approval
            rpc.video.read: for local rpc server access, this allows you to read a user's video status - requires Discord approval
            rpc.video.write: for local rpc server access, this allows you to update a user's video settings - requires Discord approval
            rpc.voice.read: for local rpc server access, this allows you to read a user's voice settings and listen for voice events - requires Discord approval
            rpc.voice.write: for local rpc server access, this allows you to update a user's voice settings - requires Discord approval
            voice: allows your app to connect to voice on user's behalf and see all the voice members - requires Discord approval
            webhook.incoming: this generates a webhook that is returned in the oauth token response for authorization code grants
        clientCredentials:
          tokenUrl: https://discord.com/api/oauth2/token
          refreshUrl: https://discord.com/api/oauth2/token
          scopes:
            activities.read: allows your app to fetch data from a user's "Now Playing/Recently Played" list - requires Discord approval
            activities.write: allows your app to update a user's activity - requires Discord approval (NOT REQUIRED FOR GAMESDK ACTIVITY MANAGER)
            applications.builds.read: allows your app to read build data for a user's applications
            applications.builds.upload: allows your app to upload/update builds for a user's applications - requires Discord approval
            applications.commands: allows your app to use commands in a guild
            applications.commands.permissions.update: allows your app to update permissions for its commands in a guild a user has permissions to
            applications.commands.update: allows your app to update its commands using a Bearer token - client credentials grant only
            applications.entitlements: allows your app to read entitlements for a user's applications
            applications.store.update: allows your app to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications
            bot: for oauth2 bots, this puts the bot in the user's selected guild by default
            connections: allows /users/@me/connections to return linked third-party accounts
            dm_channels.read: allows your app to see information about the user's DMs and group DMs - requires Discord approval
            email: enables /users/@me to return an email
            gdm.join: allows your app to join users to a group dm
            guilds: allows /users/@me/guilds to return basic information about all of a user's guilds
            guilds.join: allows /guilds/{guild.id}/members/{user.id} to be used for joining users to a guild
            guilds.members.read: allows /users/@me/guilds/{guild.id}/member to return a user's member information in a guild
            identify: allows /users/@me without email
            messages.read: for local rpc server api access, this allows you to read messages from all client channels (otherwise restricted to channels/guilds your app creates)
            openid: for OpenID Connect, this allows your app to receive user id and basic profile information
            relationships.read: allows your app to know a user's friends and implicit relationships - requires Discord approval
            rpc: for local rpc server access, this allows you to control a user's local Discord client - requires Discord approval
            rpc.activities.write: for local rpc server access, this allows you to update a user's activity - requires Discord approval
            rpc.notifications.read: for local rpc server access, this allows you to receive notifications pushed out to the user - requires Discord approval
            rpc.screenshare.read: for local rpc server access, this allows you to read a user's screenshare status- requires Discord approval
            rpc.screenshare.write: for local rpc server access, this allows you to update a user's screenshare settings- requires Discord approval
            rpc.video.read: for local rpc server access, this allows you to read a user's video status - requires Discord approval
            rpc.video.write: for local rpc server access, this allows you to update a user's video settings - requires Discord approval
            rpc.voice.read: for local rpc server access, this allows you to read a user's voice settings and listen for voice events - requires Discord approval
            rpc.voice.write: for local rpc server access, this allows you to update a user's voice settings - requires Discord approval
            voice: allows your app to connect to voice on user's behalf and see all the voice members - requires Discord approval
            webhook.incoming: this generates a webhook that is returned in the oauth token response for authorization code grants
        authorizationCode:
          authorizationUrl: discord.com/oauth2/authorize
          tokenUrl: https://discord.com/api/oauth2/token
          refreshUrl: https://discord.com/api/oauth2/token
          scopes:
            activities.read: allows your app to fetch data from a user's "Now Playing/Recently Played" list - requires Discord approval
            activities.write: allows your app to update a user's activity - requires Discord approval (NOT REQUIRED FOR GAMESDK ACTIVITY MANAGER)
            applications.builds.read: allows your app to read build data for a user's applications
            applications.builds.upload: allows your app to upload/update builds for a user's applications - requires Discord approval
            applications.commands: allows your app to use commands in a guild
            applications.commands.permissions.update: allows your app to update permissions for its commands in a guild a user has permissions to
            applications.entitlements: allows your app to read entitlements for a user's applications
            applications.store.update: allows your app to read and update store data (SKUs, store listings, achievements, etc.) for a user's applications
            bot: for oauth2 bots, this puts the bot in the user's selected guild by default
            connections: allows /users/@me/connections to return linked third-party accounts
            dm_channels.read: allows your app to see information about the user's DMs and group DMs - requires Discord approval
            email: enables /users/@me to return an email
            gdm.join: allows your app to join users to a group dm
            guilds: allows /users/@me/guilds to return basic information about all of a user's guilds
            guilds.join: allows /guilds/{guild.id}/members/{user.id} to be used for joining users to a guild
            guilds.members.read: allows /users/@me/guilds/{guild.id}/member to return a user's member information in a guild
            identify: allows /users/@me without email
            messages.read: for local rpc server api access, this allows you to read messages from all client channels (otherwise restricted to channels/guilds your app creates)
            openid: for OpenID Connect, this allows your app to receive user id and basic profile information
            relationships.read: allows your app to know a user's friends and implicit relationships - requires Discord approval
            role_connections.write: allows your app to update a user's connection and metadata for the app
            rpc: for local rpc server access, this allows you to control a user's local Discord client - requires Discord approval
            rpc.activities.write: for local rpc server access, this allows you to update a user's activity - requires Discord approval
            rpc.notifications.read: for local rpc server access, this allows you to receive notifications pushed out to the user - requires Discord approval
            rpc.screenshare.read: for local rpc server access, this allows you to read a user's screenshare status- requires Discord approval
            rpc.screenshare.write: for local rpc server access, this allows you to update a user's screenshare settings- requires Discord approval
            rpc.video.read: for local rpc server access, this allows you to read a user's video status - requires Discord approval
            rpc.video.write: for local rpc server access, this allows you to update a user's video settings - requires Discord approval
            rpc.voice.read: for local rpc server access, this allows you to read a user's voice settings and listen for voice events - requires Discord approval
            rpc.voice.write: for local rpc server access, this allows you to update a user's voice settings - requires Discord approval
            voice: allows your app to connect to voice on user's behalf and see all the voice members - requires Discord approval
            webhook.incoming: this generates a webhook that is returned in the oauth token response for authorization code grants
  responses:
    ClientErrorResponse:
      description: Client error response
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorResponse"
